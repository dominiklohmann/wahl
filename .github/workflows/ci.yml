name: CI

on:
  push:
    branches:
      - $default-branch
  pull_request:

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os:
          - name: 'macOS'
            type: 'macos-latest'
          - name: 'Ubuntu'
            type: 'ubuntu-latest'
          - name: 'Windows'
            type: 'windows-latest'
        flags:
          - name: 'Release'
            cmake:
              - '-DCMAKE_BUILD_TYPE=Release'
          - name: 'Debug'
            cmake:
              - '-DCMAKE_BUILD_TYPE=Debug'

    name: '${{ matrix.os.name }} ${{ matrix.flags.name }}'
    runs-on: '${{ matrix.os.type }}'

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: 'Configure'
        run: |
          cmake -Bbuild ${{ join(matrix.flags.cmake, ' ') }}

      - name: 'Build'
        run: |
          cmake --build build --parallel 4

      - name: 'Install (Ubuntu)'
        if: ${{ matrix.os.name == 'Ubuntu' }}
        run: |
          sudo cmake --build build --target install

      - name: 'Install (macOS/Windows)'
        if: ${{ matrix.os.name != 'Ubuntu' }}
        run: |
          cmake --build build --target install

      - name: 'Build Tests'
        working-directory: tests
        run: |
          cmake -Bbuild ${{ join(matrix.flags.cmake, ' ') }}
          cmake --build build --parallel 4

      - name: 'Test'
        working-directory: tests/build
        env:
          CTEST_OUTPUT_ON_FAILURE: 'ON'
        run: |
          ctest --build-config ${{ matrix.flags.name }}

      - name: 'Build Example: Basic'
        working-directory: examples/basic
        run: |
          cmake -Bbuild
          cmake --build build --parallel 4

      - name: 'Build Example: Group'
        working-directory: examples/group
        run: |
          cmake -Bbuild
          cmake --build build --parallel 4

      - name: 'Check for Untracked Files'
        run: |
          git add --all
          git diff --exit-code HEAD
